{
	"id": "180f9bf6-fe7c-ec11-94f6-a085fcbc9f84",
	"createdAt": "2022-01-24T10:18:25.256Z",
	"createdBy": "emmanuella",
	"globalScripts": [],
	"externalModules": [],
	"entitySets": [
		{
			"id": "B4F9F300-7075-EC11-94F6-A085FCBC9F84",
			"name": "covid_certificate",
			"contextname": "covid_certificate"
		},
		{
			"id": "81C40AB3-6F75-EC11-94F6-A085FCBC9F84",
			"name": "covidapp_employees",
			"contextname": "covidapp_employees"
		},
		{
			"id": "D8C0C845-AE7A-EC11-94F6-A085FCBC9F84",
			"name": "covid_config",
			"contextname": "covid_config"
		}
	],
	"apis": [],
	"name": "certificateList",
	"ver": "22.2.14.1328",
	"description": null,
	"content": [
		"==OBJECT STRING==",
		"var reqdata = req.body;",
		"",
		"/*",
		"reqdata = {};",
		"reqdata.userId = \"all\";",
		"reqdata.status = \"Approved\";",
		"*/",
		"",
		"",
		"//reqdata.userId is either uuid of the user or 'all' is you want to fetch all certificates",
		"function addHour(date, hour) {",
		"  return new Date(date.getTime() + hour * 60 * 60  * 1000);",
		"}",
		"",
		"function addDay(date, day) {",
		"  return new Date(date.getTime() + day * 24 * 60 * 60  * 1000);",
		"}",
		"",
		"function addMonth(date, month) {",
		" return new Date(date.getTime() + month * 30 * 24 * 60 * 60  * 1000);",
		"}",
		"",
		"const appConfig = await entities.covid_config.findOne({",
		"  cache: true, // Enables or disables caching.",
		"  // cache: true should only be used in global script functions that are exported to server script apis.",
		"});",
		"",
		"if (reqdata.userId == \"all\") {",
		"  if (reqdata.status) {",
		"    tableresult = await entities.covid_certificate.createQueryBuilder(\"cert\")",
		"       .select([",
		"      \"users.name\", \"users.employeeId\", \"cert.dateTime as dateTime\", \"cert.id as id\", \"cert.type as type\", \"cert.status as status\",",
		"      \"cert.userId as userId\", \"cert.wf_ref as wf_ref\", \"cert.createdAt as createdAt\"",
		"    ])",
		"      .leftJoin(\"covidapp_employees\", \"users\", \"users.userId = cert.userId\")",
		"       .where(\"cert.status = :status\", { status: reqdata.status })",
		"      .orderBy({ createdAt: \"DESC\" })",
		"      .skip(1).take()",
		"      .getRawMany();",
		"  }",
		"else {",
		"  tableresult = await entities.covid_certificate.createQueryBuilder(\"cert\")",
		"     .select([",
		"      \"users.name\", \"users.employeeId\", \"cert.dateTime as dateTime\", \"cert.id as id\", \"cert.type as type\", \"cert.status as status\",",
		"      \"cert.userId as userId\", \"cert.wf_ref as wf_ref\", \"cert.createdAt as createdAt\"",
		"    ])",
		"    .leftJoin(\"covidapp_employees\", \"users\", \"users.userId = cert.userId\")",
		"    .orderBy({ createdAt: \"DESC\" })",
		"    .getRawMany();",
		"}",
		"}",
		"else {",
		"  tableresult = await entities.covid_certificate.createQueryBuilder(\"cert\")",
		"    .select([",
		"      \"users.name\", \"users.employeeId\", \"cert.dateTime as dateTime\", \"cert.id as id\", \"cert.type as type\", \"cert.status as status\",",
		"      \"cert.userId as userId\", \"cert.wf_ref as wf_ref\", \"cert.createdAt as createdAt\", \"cert.comment as comment\"",
		"    ])",
		"    .leftJoin(\"covidapp_employees\", \"users\", \"users.userId = cert.userId\")",
		"    .where(\"users.userId = :userId\", { userId: reqdata.userId })",
		"    .orderBy({ createdAt: \"DESC\" })",
		"    .getRawMany();",
		"}",
		"",
		"",
		"var certificates = tableresult.map(cert => {",
		"  var expireDate;",
		"  if (cert.type.toLowerCase() == \"test\") {",
		"    cert.validityLabel = \"Test Validity\";",
		"    cert.typeIcon = appConfig.testIcon;",
		"    expireDate = addHour(new Date(Date.parse(cert.dateTime)), appConfig.testDuration);",
		"  }",
		"  else if (cert.type.toLowerCase() == \"vaccination\") {",
		"    cert.validityLabel = \"Vaccine Validity\";",
		"    cert.typeIcon = appConfig.vaccineIcon;",
		"    expireDate = addMonth(new Date(Date.parse(cert.dateTime)), appConfig.vaccineDuration);",
		"  }",
		"  else if (cert.type.toLowerCase() == \"recovery\") {",
		"    cert.validityLabel = \"Recover Validity\";",
		"    cert.typeIcon = appConfig.recoveredIcon;",
		"    expireDate = addMonth(new Date(Date.parse(cert.dateTime)), appConfig.recoverDuration);",
		"  }",
		"  cert.isApproved = cert.status == \"Approved\";",
		"  cert.validity = cert.isApproved && expireDate > Date.parse(new Date()) ? \"Valid\" : \"Invalid\";",
		"  cert.expireDate = expireDate;",
		"  return cert;",
		"});",
		"",
		"result = certificates;",
		"complete();"
	],
	"useAsGlobalScript": false,
	"isTypescript": false,
	"transpiledContent": null,
	"lastRunSuccessful": false,
	"jsscriptGroup": "a04e57d7-2b79-ec11-94f6-a085fcbc9f84",
	"package": "c32aaee6-1079-ec11-94f6-a085fcbc9f84"
}